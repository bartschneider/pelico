import { c as create_ssr_component, v as validate_component, d as escape } from "../../chunks/ssr.js";
/* empty css                                                  */
import { G as GameFormModal } from "../../chunks/SessionFormModal.svelte_svelte_type_style_lang.js";
const css = {
  code: ".completion-stat.svelte-7xe000{padding:1rem;border-radius:0.5rem}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport { api, ApiError } from \\"$lib/api\\";\\nimport GameCard from \\"$lib/components/GameCard.svelte\\";\\nimport GameFormModal from \\"$lib/components/GameFormModal.svelte\\";\\nimport GameDetailModal from \\"$lib/components/GameDetailModal.svelte\\";\\nimport SessionFormModal from \\"$lib/components/SessionFormModal.svelte\\";\\nlet stats = null;\\nlet recentlyPlayed = [];\\nlet recentlyAdded = [];\\nlet platforms = [];\\nlet loading = true;\\nlet error = null;\\nlet showModal = false;\\nlet showDetailModal = false;\\nlet showSessionModal = false;\\nlet selectedGame = null;\\nonMount(async () => {\\n  await loadData();\\n});\\nasync function loadData() {\\n  try {\\n    loading = true;\\n    error = null;\\n    const [statsData, recentlyPlayedData, recentlyAddedData, platformsData] = await Promise.all([\\n      api.getStats().catch(() => null),\\n      api.getRecentlyPlayedGames().catch(() => []),\\n      api.getRecentlyAddedGames(5).catch(() => []),\\n      api.getPlatforms().catch(() => [])\\n    ]);\\n    stats = statsData;\\n    recentlyPlayed = recentlyPlayedData || [];\\n    recentlyAdded = recentlyAddedData || [];\\n    platforms = platformsData || [];\\n  } catch (e) {\\n    if (e instanceof ApiError) {\\n      error = `Failed to load data: ${e.message}`;\\n    } else {\\n      error = \\"Error connecting to the backend. Please check if the server is running.\\";\\n    }\\n    console.error(\\"Load data error:\\", e);\\n  } finally {\\n    loading = false;\\n  }\\n}\\nfunction openAddGameModal() {\\n  selectedGame = null;\\n  showModal = true;\\n}\\nfunction openEditGameModal(event) {\\n  selectedGame = event.detail;\\n  showDetailModal = false;\\n  showModal = true;\\n}\\nasync function handleDeleteGame(event) {\\n  const gameId = event.detail;\\n  try {\\n    await api.deleteGame(gameId);\\n    await loadData();\\n  } catch (e) {\\n    if (e instanceof ApiError) {\\n      alert(`Failed to delete game: ${e.message}`);\\n    } else {\\n      alert(\\"An error occurred while deleting the game.\\");\\n    }\\n    console.error(\\"Delete game error:\\", e);\\n  }\\n}\\nasync function handleFormSubmit(event) {\\n  const gameData = event.detail;\\n  const isEdit = !!selectedGame;\\n  try {\\n    if (isEdit && selectedGame) {\\n      await api.updateGame(selectedGame.id, gameData);\\n    } else {\\n      await api.createGame(gameData);\\n    }\\n    showModal = false;\\n    await loadData();\\n  } catch (e) {\\n    if (e instanceof ApiError) {\\n      alert(`Failed to save game: ${e.message}`);\\n    } else {\\n      alert(\\"An error occurred while saving the game.\\");\\n    }\\n    console.error(\\"Save game error:\\", e);\\n  }\\n}\\nfunction handleLogSession(event) {\\n  const gameId = event.detail;\\n  const allGames = [\\n    ...Array.isArray(recentlyPlayed) ? recentlyPlayed : [],\\n    ...Array.isArray(recentlyAdded) ? recentlyAdded : []\\n  ];\\n  const game = allGames.find((g) => g.id === gameId);\\n  if (game) {\\n    selectedGame = game;\\n    showSessionModal = true;\\n    showDetailModal = false;\\n  }\\n}\\nasync function handleSessionSubmit(event) {\\n  const sessionData = event.detail;\\n  if (!selectedGame) return;\\n  try {\\n    await api.createSession(selectedGame.id, sessionData);\\n    showSessionModal = false;\\n    await loadData();\\n  } catch (e) {\\n    if (e instanceof ApiError) {\\n      alert(`Failed to log session: ${e.message}`);\\n    } else {\\n      alert(\\"An error occurred while logging the session.\\");\\n    }\\n    console.error(\\"Log session error:\\", e);\\n  }\\n}\\nfunction handleViewGame(event) {\\n  selectedGame = event.detail;\\n  showDetailModal = true;\\n}\\nfunction getCompletionPercentage(completed, total) {\\n  return total > 0 ? Math.round(completed / total * 100) : 0;\\n}\\n<\/script>\\n\\n<div class=\\"container-fluid mt-4\\">\\n  <div class=\\"d-flex justify-content-between align-items-center mb-4\\">\\n    <div>\\n      <h1>\\n        <i class=\\"fas fa-home me-2 text-primary\\"></i>\\n        Dashboard\\n      </h1>\\n      <p class=\\"text-muted mb-0\\">Welcome to your game collection</p>\\n    </div>\\n    <div class=\\"d-flex gap-2\\">\\n      <button class=\\"btn btn-outline-secondary\\" on:click={loadData} disabled={loading}>\\n        <i class=\\"fas fa-sync-alt {loading ? \'fa-spin\' : \'\'}\\"></i> Refresh\\n      </button>\\n      <button class=\\"btn btn-primary\\" on:click={openAddGameModal}>\\n        <i class=\\"fas fa-plus me-1\\"></i> Add Game\\n      </button>\\n    </div>\\n  </div>\\n\\n  {#if loading}\\n    <div class=\\"d-flex justify-content-center align-items-center\\" style=\\"height: 300px;\\">\\n      <div class=\\"text-center\\">\\n        <div class=\\"spinner-border text-primary mb-3\\" role=\\"status\\">\\n          <span class=\\"visually-hidden\\">Loading...</span>\\n        </div>\\n        <p class=\\"text-muted\\">Loading dashboard...</p>\\n      </div>\\n    </div>\\n  {:else if error}\\n    <div class=\\"alert alert-danger d-flex align-items-center\\">\\n      <i class=\\"fas fa-exclamation-triangle me-2\\"></i>\\n      <div>\\n        {error}\\n        <button class=\\"btn btn-sm btn-outline-danger ms-2\\" on:click={loadData}>\\n          Try Again\\n        </button>\\n      </div>\\n    </div>\\n  {:else}\\n    <!-- Statistics Cards -->\\n    {#if stats}\\n      <div class=\\"row mb-4\\">\\n        <div class=\\"col-lg-2 col-md-4 col-sm-6 mb-3\\">\\n          <div class=\\"card text-center h-100 bg-primary text-white\\">\\n            <div class=\\"card-body\\">\\n              <i class=\\"fas fa-gamepad fa-2x mb-2\\"></i>\\n              <h6 class=\\"card-title\\">Total Games</h6>\\n              <p class=\\"card-text fs-3 fw-bold mb-0\\">{stats.total_games}</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\"col-lg-2 col-md-4 col-sm-6 mb-3\\">\\n          <div class=\\"card text-center h-100 bg-secondary text-white\\">\\n            <div class=\\"card-body\\">\\n              <i class=\\"fas fa-desktop fa-2x mb-2\\"></i>\\n              <h6 class=\\"card-title\\">Platforms</h6>\\n              <p class=\\"card-text fs-3 fw-bold mb-0\\">{stats.total_platforms}</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\"col-lg-2 col-md-4 col-sm-6 mb-3\\">\\n          <div class=\\"card text-center h-100 bg-success text-white\\">\\n            <div class=\\"card-body\\">\\n              <i class=\\"fas fa-play fa-2x mb-2\\"></i>\\n              <h6 class=\\"card-title\\">Play Sessions</h6>\\n              <p class=\\"card-text fs-3 fw-bold mb-0\\">{stats.total_sessions}</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\"col-lg-2 col-md-4 col-sm-6 mb-3\\">\\n          <div class=\\"card text-center h-100 bg-info text-white\\">\\n            <div class=\\"card-body\\">\\n              <i class=\\"fas fa-clock fa-2x mb-2\\"></i>\\n              <h6 class=\\"card-title\\">Total Hours</h6>\\n              <p class=\\"card-text fs-3 fw-bold mb-0\\">\\n                {stats.playtime_stats?.total_hours || 0}\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\"col-lg-2 col-md-4 col-sm-6 mb-3\\">\\n          <div class=\\"card text-center h-100 bg-warning text-dark\\">\\n            <div class=\\"card-body\\">\\n              <i class=\\"fas fa-list fa-2x mb-2\\"></i>\\n              <h6 class=\\"card-title\\">Shortlist</h6>\\n              <p class=\\"card-text fs-3 fw-bold mb-0\\">{stats.total_shortlist}</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\"col-lg-2 col-md-4 col-sm-6 mb-3\\">\\n          <div class=\\"card text-center h-100 bg-danger text-white\\">\\n            <div class=\\"card-body\\">\\n              <i class=\\"fas fa-heart fa-2x mb-2\\"></i>\\n              <h6 class=\\"card-title\\">Wishlist</h6>\\n              <p class=\\"card-text fs-3 fw-bold mb-0\\">{stats.total_wishlist}</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Completion Progress -->\\n      {#if stats.completion_stats}\\n        <div class=\\"row mb-4\\">\\n          <div class=\\"col-12\\">\\n            <div class=\\"card\\">\\n              <div class=\\"card-header\\">\\n                <h5 class=\\"mb-0\\">\\n                  <i class=\\"fas fa-trophy me-2\\"></i>\\n                  Completion Progress\\n                </h5>\\n              </div>\\n              <div class=\\"card-body\\">\\n                <div class=\\"row text-center\\">\\n                  <div class=\\"col-3\\">\\n                    <div class=\\"completion-stat text-success\\">\\n                      <i class=\\"fas fa-check-circle fa-2x mb-1\\"></i>\\n                      <h6>Completed</h6>\\n                      <span class=\\"fs-4 fw-bold\\">{stats.completion_stats.completed}</span>\\n                    </div>\\n                  </div>\\n                  <div class=\\"col-3\\">\\n                    <div class=\\"completion-stat text-warning\\">\\n                      <i class=\\"fas fa-play-circle fa-2x mb-1\\"></i>\\n                      <h6>In Progress</h6>\\n                      <span class=\\"fs-4 fw-bold\\">{stats.completion_stats.in_progress}</span>\\n                    </div>\\n                  </div>\\n                  <div class=\\"col-3\\">\\n                    <div class=\\"completion-stat text-muted\\">\\n                      <i class=\\"fas fa-pause-circle fa-2x mb-1\\"></i>\\n                      <h6>Not Started</h6>\\n                      <span class=\\"fs-4 fw-bold\\">{stats.completion_stats.not_started}</span>\\n                    </div>\\n                  </div>\\n                  <div class=\\"col-3\\">\\n                    <div class=\\"completion-stat text-danger\\">\\n                      <i class=\\"fas fa-times-circle fa-2x mb-1\\"></i>\\n                      <h6>Abandoned</h6>\\n                      <span class=\\"fs-4 fw-bold\\">{stats.completion_stats.abandoned}</span>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\"text-center mt-3\\">\\n                  <h6>Overall Completion Rate</h6>\\n                  <div class=\\"progress mb-2\\" style=\\"height: 20px;\\">\\n                    <div \\n                      class=\\"progress-bar bg-success\\" \\n                      role=\\"progressbar\\" \\n                      style=\\"width: {getCompletionPercentage(stats.completion_stats.completed, stats.total_games)}%\\"\\n                    >\\n                      {getCompletionPercentage(stats.completion_stats.completed, stats.total_games)}%\\n                    </div>\\n                  </div>\\n                  <p class=\\"text-muted mb-0\\">\\n                    {stats.completion_stats.completed} of {stats.total_games} games completed\\n                  </p>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      {/if}\\n    {/if}\\n\\n    <!-- Recently Played Games -->\\n    <div class=\\"row mb-4\\">\\n      <div class=\\"col-12\\">\\n        <div class=\\"card\\">\\n          <div class=\\"card-header d-flex justify-content-between align-items-center\\">\\n            <h5 class=\\"mb-0\\">\\n              <i class=\\"fas fa-history me-2\\"></i>\\n              Recently Played\\n            </h5>\\n            {#if recentlyPlayed.length > 0}\\n              <small class=\\"text-muted\\">{recentlyPlayed.length} games</small>\\n            {/if}\\n          </div>\\n          <div class=\\"card-body\\">\\n            {#if recentlyPlayed.length === 0}\\n              <div class=\\"text-center py-4\\">\\n                <i class=\\"fas fa-play fa-3x text-muted mb-3\\"></i>\\n                <h6>No recent sessions</h6>\\n                <p class=\\"text-muted\\">Start playing games to see them here!</p>\\n              </div>\\n            {:else}\\n              <div class=\\"row\\">\\n                {#each recentlyPlayed.slice(0, 5) as game (game.id)}\\n                  <div class=\\"col-xl-2 col-lg-3 col-md-4 col-sm-6 mb-3\\">\\n                    <GameCard \\n                      {game} \\n                      on:edit={openEditGameModal}\\n                      on:delete={handleDeleteGame}\\n                      on:log={handleLogSession}\\n                      on:view={handleViewGame}\\n                    />\\n                  </div>\\n                {/each}\\n              </div>\\n              {#if recentlyPlayed.length > 5}\\n                <div class=\\"text-center\\">\\n                  <a href=\\"/collection\\" class=\\"btn btn-outline-primary\\">\\n                    View All Recent Games\\n                  </a>\\n                </div>\\n              {/if}\\n            {/if}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Recently Added Games -->\\n    <div class=\\"row mb-4\\">\\n      <div class=\\"col-12\\">\\n        <div class=\\"card\\">\\n          <div class=\\"card-header d-flex justify-content-between align-items-center\\">\\n            <h5 class=\\"mb-0\\">\\n              <i class=\\"fas fa-plus-circle me-2\\"></i>\\n              Recently Added\\n            </h5>\\n            {#if recentlyAdded.length > 0}\\n              <small class=\\"text-muted\\">{recentlyAdded.length} games</small>\\n            {/if}\\n          </div>\\n          <div class=\\"card-body\\">\\n            {#if recentlyAdded.length === 0}\\n              <div class=\\"text-center py-4\\">\\n                <i class=\\"fas fa-gamepad fa-3x text-muted mb-3\\"></i>\\n                <h6>No games yet</h6>\\n                <p class=\\"text-muted\\">Add your first game to get started!</p>\\n                <button class=\\"btn btn-primary\\" on:click={openAddGameModal}>\\n                  <i class=\\"fas fa-plus me-1\\"></i> Add Game\\n                </button>\\n              </div>\\n            {:else}\\n              <div class=\\"row\\">\\n                {#each recentlyAdded as game (game.id)}\\n                  <div class=\\"col-xl-2 col-lg-3 col-md-4 col-sm-6 mb-3\\">\\n                    <GameCard \\n                      {game} \\n                      on:edit={openEditGameModal}\\n                      on:delete={handleDeleteGame}\\n                      on:log={handleLogSession}\\n                      on:view={handleViewGame}\\n                    />\\n                  </div>\\n                {/each}\\n              </div>\\n              <div class=\\"text-center\\">\\n                <a href=\\"/collection\\" class=\\"btn btn-outline-primary\\">\\n                  <i class=\\"fas fa-eye me-1\\"></i> View Full Collection\\n                </a>\\n              </div>\\n            {/if}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  {/if}\\n</div>\\n\\n<GameFormModal \\n  game={selectedGame} \\n  {platforms}\\n  show={showModal}\\n  on:submit={handleFormSubmit} \\n  on:close={() => showModal = false} \\n/>\\n\\n{#if showDetailModal && selectedGame}\\n  <GameDetailModal \\n    game={selectedGame} \\n    show={showDetailModal}\\n    on:close={() => showDetailModal = false}\\n    on:edit={openEditGameModal}\\n    on:delete={handleDeleteGame}\\n    on:log={handleLogSession}\\n  />\\n{/if}\\n\\n{#if showSessionModal && selectedGame}\\n  <SessionFormModal\\n    game={selectedGame}\\n    show={showSessionModal}\\n    on:submit={handleSessionSubmit}\\n    on:close={() => showSessionModal = false}\\n  />\\n{/if}\\n\\n<style>\\n  .completion-stat {\\n    padding: 1rem;\\n    border-radius: 0.5rem;\\n  }\\n</style>"],"names":[],"mappings":"AAgaE,8BAAiB,CACf,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,MACjB"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let platforms = [];
  let showModal = false;
  let selectedGame = null;
  $$result.css.add(css);
  return `<div class="container-fluid mt-4"><div class="d-flex justify-content-between align-items-center mb-4"><div data-svelte-h="svelte-1ctjr4a"><h1><i class="fas fa-home me-2 text-primary"></i>
        Dashboard</h1> <p class="text-muted mb-0">Welcome to your game collection</p></div> <div class="d-flex gap-2"><button class="btn btn-outline-secondary" ${"disabled"}><i class="${"fas fa-sync-alt " + escape("fa-spin", true)}"></i> Refresh</button> <button class="btn btn-primary" data-svelte-h="svelte-mzv9ad"><i class="fas fa-plus me-1"></i> Add Game</button></div></div> ${`<div class="d-flex justify-content-center align-items-center" style="height: 300px;" data-svelte-h="svelte-1xbbkmy"><div class="text-center"><div class="spinner-border text-primary mb-3" role="status"><span class="visually-hidden">Loading...</span></div> <p class="text-muted">Loading dashboard...</p></div></div>`}</div> ${validate_component(GameFormModal, "GameFormModal").$$render(
    $$result,
    {
      game: selectedGame,
      platforms,
      show: showModal
    },
    {},
    {}
  )} ${``} ${``}`;
});
export {
  Page as default
};
